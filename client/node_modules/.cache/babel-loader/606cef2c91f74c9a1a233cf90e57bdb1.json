{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\artists-instruments-boilerplate-antd\\\\client\\\\src\\\\components\\\\lists\\\\Instruments.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ARTIST_INSTRUMENTS } from '../../queries';\nimport { List } from 'antd';\nimport Instrument from '../listItems/Instrument';\n\nconst getStyles = () => ({\n  list: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});\n\nconst Instruments = props => {\n  const styles = getStyles();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ARTIST_INSTRUMENTS, {\n    variables: {\n      artistId: `${props.artistId}`\n    }\n  });\n  if (loading) return 'Loading...';\n  if (error) return `Errror! ${error.message}`;\n  return /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 20,\n      column: 1\n    },\n    style: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, data.instrumentsByArtistId.map(({\n    id,\n    year,\n    brand,\n    type,\n    price,\n    artistId\n  }) => /*#__PURE__*/React.createElement(List.Item, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Instrument, {\n    key: id,\n    id: id,\n    year: year,\n    brand: brand,\n    type: type,\n    price: price,\n    artistId: artistId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Instruments;","map":{"version":3,"sources":["D:/Projects/artists-instruments-boilerplate-antd/client/src/components/lists/Instruments.js"],"names":["React","useQuery","GET_ARTIST_INSTRUMENTS","List","Instrument","getStyles","list","display","justifyContent","Instruments","props","styles","loading","error","data","variables","artistId","message","gutter","column","instrumentsByArtistId","map","id","year","brand","type","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,sBAAT,QAAuC,eAAvC;AAEA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,SAAS,GAAG,OAAO;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE;AAFZ;AADiB,CAAP,CAAlB;;AAOA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACC,sBAAD,EAAyB;AAChEa,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAG,GAAEN,KAAK,CAACM,QAAS;AAA9B;AADqD,GAAzB,CAAzC;AAGA,MAAIJ,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,WAAUA,KAAK,CAACI,OAAQ,EAAhC;AACX,sBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAZ;AAAuC,IAAA,KAAK,EAAER,MAAM,CAACL,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,CAACM,qBAAL,CAA2BC,GAA3B,CACC,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,KAAzB;AAAgCV,IAAAA;AAAhC,GAAD,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEM,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,GAAG,EAAEA,EADP;AAEE,IAAA,EAAE,EAAEA,EAFN;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,IAAI,EAAEC,IALR;AAME,IAAA,KAAK,EAAEC,KANT;AAOE,IAAA,QAAQ,EAAEV,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFH,CADH,CADF;AAmBD,CA3BD;;AA6BA,eAAeP,WAAf","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_ARTIST_INSTRUMENTS } from '../../queries';\r\n\r\nimport { List } from 'antd';\r\n\r\nimport Instrument from '../listItems/Instrument';\r\n\r\nconst getStyles = () => ({\r\n  list: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst Instruments = (props) => {\r\n  const styles = getStyles();\r\n\r\n  const { loading, error, data } = useQuery(GET_ARTIST_INSTRUMENTS, {\r\n    variables: { artistId: `${props.artistId}` },\r\n  });\r\n  if (loading) return 'Loading...';\r\n  if (error) return `Errror! ${error.message}`;\r\n  return (\r\n    <List grid={{ gutter: 20, column: 1 }} style={styles.list}>\r\n      {data.instrumentsByArtistId.map(\r\n        ({ id, year, brand, type, price, artistId }) => (\r\n          <List.Item key={id}>\r\n            <Instrument\r\n              key={id}\r\n              id={id}\r\n              year={year}\r\n              brand={brand}\r\n              type={type}\r\n              price={price}\r\n              artistId={artistId}\r\n            />\r\n          </List.Item>\r\n        )\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default Instruments;\r\n"]},"metadata":{},"sourceType":"module"}