{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\artists-instruments-boilerplate-antd\\\\client\\\\src\\\\components\\\\forms\\\\AddArtist.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD_ARTIST, GET_ARTISTS } from '../../queries';\n\nconst AddArtist = () => {\n  const [id] = useState(uuidv4());\n  const [addArtist] = useMutation(ADD_ARTIST);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      firstName,\n      lastName\n    } = values;\n    addArtist({\n      variables: {\n        id,\n        firstName,\n        lastName\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addArtist: {\n          __typename: 'Artist',\n          id,\n          firstName,\n          lastName\n        }\n      },\n      update: (proxy, {\n        data: {\n          addArtist\n        }\n      }) => {\n        const data = proxy.readQuery({\n          query: GET_ARTISTS\n        });\n        proxy.writeQuery({\n          query: GET_ARTISTS,\n          data: { ...data,\n            artists: [...data.artists, addArtist]\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"add-artist-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    size: \"large\",\n    style: {\n      marginBottom: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"firstName\",\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. John\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"lastName\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Smith\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Add Artist\")));\n};\n\nexport default AddArtist;","map":{"version":3,"sources":["D:/Projects/artists-instruments-boilerplate-antd/client/src/components/forms/AddArtist.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","v4","uuidv4","ADD_ARTIST","GET_ARTISTS","AddArtist","id","addArtist","form","useForm","forceUpdate","onFinish","values","firstName","lastName","variables","optimisticResponse","__typename","update","proxy","data","readQuery","query","writeQuery","artists","marginBottom","required","message","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nimport { ADD_ARTIST, GET_ARTISTS } from '../../queries'\r\n\r\nconst AddArtist = () => {\r\n  const [id] = useState(uuidv4())\r\n  const [addArtist] = useMutation(ADD_ARTIST)\r\n\r\n  const [form] = Form.useForm()\r\n  const [, forceUpdate] = useState()\r\n\r\n  // To disable submit button at the beginning.\r\n  useEffect(() => {\r\n    forceUpdate({})\r\n  }, [])\r\n\r\n  const onFinish = values => {\r\n    const { firstName, lastName } = values\r\n\r\n    addArtist({\r\n      variables: {\r\n        id,\r\n        firstName,\r\n        lastName\r\n      },\r\n      optimisticResponse: {\r\n        __typename: 'Mutation',\r\n        addArtist: {\r\n          __typename: 'Artist',\r\n          id,\r\n          firstName,\r\n          lastName\r\n        }\r\n      },\r\n      update: (proxy, { data: { addArtist } }) => {\r\n        const data = proxy.readQuery({ query: GET_ARTISTS })\r\n        proxy.writeQuery({\r\n          query: GET_ARTISTS,\r\n          data: {\r\n            ...data,\r\n            artists: [...data.artists, addArtist]\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name='add-artist-form'\r\n      layout='inline'\r\n      onFinish={onFinish}\r\n      size='large'\r\n      style={{ marginBottom: '40px' }}\r\n    >\r\n      <Form.Item\r\n        name='firstName'\r\n        rules={[{ required: true, message: 'Please input your first name!' }]}\r\n      >\r\n        <Input placeholder='i.e. John' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='lastName'\r\n        rules={[{ required: true, message: 'Please input your last name!' }]}\r\n      >\r\n        <Input placeholder='i.e. Smith' />\r\n      </Form.Item>\r\n      <Form.Item shouldUpdate={true}>\r\n        {() => (\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            disabled={\r\n              !form.isFieldsTouched(true) ||\r\n              form.getFieldsError().filter(({ errors }) => errors.length).length\r\n            }\r\n          >\r\n            Add Artist\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default AddArtist\r\n"]},"metadata":{},"sourceType":"module"}